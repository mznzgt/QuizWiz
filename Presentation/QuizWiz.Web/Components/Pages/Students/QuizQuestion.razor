@using QuizWiz.Application.SharedModel
@rendermode InteractiveServer

<div class="quiz-question my-4">
    <h4 class="mb-3">@Question.Question</h4>

    @foreach (var option in Options)
    {
        <button class="btn @GetButtonClass(option) m-2" @onclick="() => SelectOption(option)">@option</button>
    }
</div>

@code {
    [Parameter] public Quiz Question { get; set; }
    [Parameter] public EventCallback<string> OnOptionSelected { get; set; }

    private List<string> Options => new List<string> { Question.OptionA, Question.OptionB, Question.OptionC, Question.OptionD };
    private string SelectedOption { get; set; }
    private bool? IsCorrect { get; set; }

    private async Task SelectOption(string option)
    {
        SelectedOption = option;
        IsCorrect = option == Question.CorrectAnswer;

        // Call the parent component's OnOptionSelected callback
        await OnOptionSelected.InvokeAsync(option);

        // Update the component's state
        StateHasChanged();

        await Task.Delay(2000);

        // Reset
        IsCorrect = null;
        SelectedOption = null;
    }

    private string GetButtonClass(string option)
    {
        if (IsCorrect == null) return "btn-outline-primary";

        return option == SelectedOption
          ? (IsCorrect == true ? "btn-success" : "btn-danger")
          : "btn-outline-secondary";
    }
}